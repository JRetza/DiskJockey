language: julia
julia:
  # - release
  # - nightly
  - 1.1

# Need to install a Fortran compiler for Dierckx and RADMC-3D depedency
before_install:
  - sudo apt-get -qq update
  - sudo apt-get install gfortran
  - export PATH=$PATH:$PWD/scripts # add the scripts/ directory to the PATH
  - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  # Useful for debugging any issues with conda
  - conda info -a

  # Install dependencies here
  - conda create -q -n test-environment matplotlib pyyaml h5py astropy numpy scipy
  - source activate test-environment
  # - python setup.py install

#script:
#  - git fetch --unshallow
#  - echo "We are in $(pwd) directory."
#  - julia --color=yes -e 'Pkg.clone(pwd())'
#  - julia --color=yes -e 'Pkg.build("DiskJockey")'
#  # check to see what's up with the pycall problem
#  - conda info --envs
#  - conda list
#  # - julia --color=yes -e 'Pkg.build("PyCall")' # Doesn't like to install properly the first time
#  # Necessary to install Matplotlib via it's own Conda install
#  # - julia --color=yes -e 'ENV["PYTHON"]=""; Pkg.build("PyCall"); using PyPlot'
#  - LD_PRELOAD=${HOME}/.julia/v0.6/Conda/deps/usr/lib/libz.so julia --check-bounds=yes -e 'Pkg.test("DiskJockey", coverage=true)'

# This the default script that is run
# julia -e 'Pkg.clone(pwd())'
# julia -e 'Pkg.build("$name")'
# if [ -f test/runtests.jl ]; then
#   julia --check-bounds=yes -e 'Pkg.test("$name", coverage=true)'
# fi

after_success:
  - julia -e 'using Pkg'
  - julia -e 'Pkg.add("Documenter")'
  - julia -e 'cd(Pkg.dir("DiskJockey")); include(joinpath("docs", "make.jl"))'
